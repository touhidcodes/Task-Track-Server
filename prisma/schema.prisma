// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  username    String
  email       String       @unique
  password    String
  role        UserRole
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  assignments Assignment[] @relation("InstructorAssignments")
  submissions Submission[]

  @@map("users")
}

model Assignment {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  title        String
  description  String
  deadline     DateTime
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  instructor   User         @relation("InstructorAssignments", fields: [instructorId], references: [id])
  instructorId String       @db.ObjectId
  submissions  Submission[]

  @@map("assignments")
}

model Submission {
  id            String     @id @default(auto()) @map("_id") @db.ObjectId
  submissionUrl String
  note          String?
  status        Status     @default(PENDING)
  feedback      String?
  student       User       @relation(fields: [studentId], references: [id])
  studentId     String     @db.ObjectId
  assignment    Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId  String     @db.ObjectId
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt

  @@map("submissions")
}

enum UserRole {
  SUPERADMIN
  INSTRUCTOR
  STUDENT
}

enum Status {
  PENDING
  ACCEPTED
  REJECTED
}
